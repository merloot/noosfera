<?php

namespace common\models;

use Yii;
use yii\web\UploadedFile;
use yii\helpers\ArrayHelper;
/**
 * This is the model class for table "Profile".
 *
 * @property int $p_id
 * @property int $p_user_id
 * @property string $p_name
 * @property string $p_description
 * @property string $p_image
 * @property bool $p_gender
 * @property string $p_date
 *
 * @property User $pUser
 */
class Profile extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'Profile';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
//            [['p_name'], 'required'],
            [['p_user_id'], 'default', 'value' => null],
            [['p_user_id'], 'integer'],
            [['p_gender'], 'boolean'],
            [['p_date','p_image'], 'safe'],
            [['p_name'], 'string', 'max' => 100],
            [['p_description', 'p_image'], 'string', 'max' => 1000],
            [['p_image'],'file','extensions' => 'png, jpg'],
            [['p_user_id'], 'unique'],
            [['p_user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['p_user_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'p_id' => 'P ID',
            'p_user_id' => 'P User ID',
            'p_name' => 'P Name',
            'p_description' => 'P Description',
            'p_image' => 'P Image',
            'p_gender' => 'P Gender',
            'p_date' => 'P Date',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */

    public function getCompetenceProfile()
    {
        return $this->hasMany(CompetenceProfile::className(), [
            'cp_p_id' => 'p_user_id'
        ]);
    }

    public function getCpCom()
    {
        return $this->hasMany(Competence::className(), [
            'com_id' => 'cp_com_id'])
            ->viaTable('CompetenceProfile', [
                'cp_p_id' => 'p_user_id'
            ]);
    }

    public function getPUser()
    {
        return $this->hasOne(User::className(), [
            'id' => 'p_user_id'
        ]);

    }

    public function getConPUser()
    {
        return $this->hasMany(PurchaseConsultation::className(),[
            'pc_user_id'=>'p_user_id'
        ]);
    }

    public function getConSUser()
    {
        return $this->hasMany(SellingConsultation::className(),[
            'sc_user_id'=>'p_user_id'
        ]);
    }
    public function getImage()
    {
        return $this->hasMany(Image::className(),[
            'i_user_id'=>'p_user_id'
        ]);
    }


    public function afterDelete()
    {
        @unlink(Yii::getAlias('@avatar') . '/uploads/avatar' . $this->p_image);
        parent::afterDelete();
    }

//    public function beforeSave($insert)
//    {
//        if(!parent::beforeSave($insert)) {
//            return false;
//        }
//
//        $this->load ( \Yii::$app->getRequest ()->getBodyParams (), '' );
//        $image =UploadedFile::getInstanceByName ( 'p_image' );
//        if (is_object ( $image )) {
//            $name =$this->p_image = time () . "_" . uniqid () . '.' . $image->extension;
//            $imageDir = \Yii::getAlias ( '@avatar' );
//            $image->saveAs ( $imageDir . '/' . $this->p_image );
//            $this->p_image = $name;
//            \Yii::info ( 'New image saved,: ' . $this->p_user_id, __METHOD__ );
//        } else {
//            \Yii::info ( 'This is not image object!!', __METHOD__ );
//        }
//        if ($this->save()) {
//            $response = \Yii::$app->getResponse ();
//            $response->setStatusCode ( 201 );
//        } elseif (! $this->hasErrors ()) {
//            $response->setStatusCode ( 500 );
//            throw new yii\web\ServerErrorHttpException( 'Failed to create the object for unknown reason.' );
//
//        }
//        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
//    }




    public function extraFields()
    {
        return ['competenceProfile','cpCom','pUser','conPUser','conSUser','image'];
    }

//    public function beforeValidate()
//    {
//
//        if ($this->p_user_id != Yii::$app->user->getId())
//        {
//            $this->addError('p_user_id', 'Access deny');
////            var_dump(Profile::findAll()->asArray)
//            return false;
//            return parent::beforeValidate(); // TODO: Change the autogenerated stub
//        }
//    }
}
